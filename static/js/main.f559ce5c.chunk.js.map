{"version":3,"sources":["components/contactList/ContactList.module.css","components/Filter/Filter.module.css","components/app/App.module.css","components/contactForm/ContactForm.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operation.js","redux/phonebook/phonebook-selectors.js","components/contactForm/ContactForm.js","components/section/Section.js","components/contactList/ContactList.js","components/Filter/Filter.js","components/app/App.js","redux/phonebook/phonebook-reducers.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","getAllContactsRequest","createAction","getAllContactsSuccess","getAllContactsFailure","addNewContactRequested","addNewContactSuccess","addNewContactFailure","deleteContactRequested","deleteContactSuccess","deleteContactFailure","onChangeFilter","getItemsSelector","state","contacts","items","filterSelector","filter","errorSelector","error","loadingSelector","loading","getFilteredContactsSelector","createSelector","contatct","name","toLowerCase","includes","ContactForm","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","some","element","alert","addContact","this","getAllContacts","onSubmit","className","css","label","input","type","pattern","title","required","onChange","button","spinerContainer","color","height","width","timeout","spiner","Component","mapDispatchToProps","dispatch","a","contact","post","data","get","connect","Section","children","toUpperCase","deleteContact","id","delete","filteredContacts","map","item","text","onClick","target","App","container","createReducer","handleError","_","action","payload","clearError","itemsReducer","filterReducer","contactsReducer","combineReducers","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,mBCA7FD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,UAAY,yB,uCCA9BD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,4BAA4B,gBAAkB,qCAAqC,OAAS,8B,wOCE7LC,IAAMC,SAASC,QAAU,wBAEzB,IAAMC,EAAwBC,YAAa,mCACrCC,EAAwBD,YAAa,mCACrCE,EAAwBF,YAAa,mCAIrCG,EAAyBH,YAAa,oCACtCI,EAAuBJ,YAAa,kCACpCK,EAAuBL,YAAa,kCAGpCM,EAA0BN,YAAa,oCACvCO,EAAuBP,YAAa,kCACpCQ,EAAwBR,YAAa,mCAErCS,EAAiBT,YAAa,0BCPpCJ,IAAMC,SAASC,QAAU,wBAEzB,I,cCbMY,EAAmB,SAACC,GAAD,OAAWA,EAAMC,SAASC,OAC7CC,EAAiB,SAACH,GAAD,OAAWA,EAAMC,SAASG,QAC3CC,EAAgB,SAACL,GAAD,OAAWA,EAAMC,SAASK,OAC1CC,EAAkB,SAACP,GAAD,OAAWA,EAAMC,SAASO,SAErCC,EAA8BC,YACzC,CAACX,EAAkBI,IACnB,SAACF,EAAUG,GAAX,OACEH,EAASG,QAAO,SAACO,GAAD,OACdA,EAASC,KAAKC,cAAcC,SAASV,EAAOS,qB,OCI5CE,E,4MACJf,MAAQ,CAAEY,KAAM,GAAII,OAAQ,I,EAM5BC,aAAe,SAACC,GACd,MAAwBA,EAAMC,cAAtBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGT,EAAOQ,K,EAIZE,aAAe,SAACJ,GACdA,EAAMK,iBAEN,IAAQX,EAAS,EAAKZ,MAAdY,KAEJ,EAAKY,MAAMvB,SAASwB,MAAK,SAACC,GAAD,OAAaA,EAAQd,OAASA,KACzDe,MAAM,GAAD,OAAIf,EAAJ,6BAIP,EAAKY,MAAMI,WAAW,EAAK5B,MAAMY,KAAM,EAAKZ,MAAMgB,QAElD,EAAKK,SAAS,CAAET,KAAM,GAAII,OAAQ,O,uDAxBpC,WACEa,KAAKL,MAAMM,mB,oBA0Bb,WACE,IAAQtB,EAAYqB,KAAKL,MAAjBhB,QACR,OACE,qCACE,uBAAMuB,SAAUF,KAAKP,aAArB,UACE,wBAAOU,UAAWC,IAAIC,MAAtB,iBAEE,uBACEF,UAAWC,IAAIE,MACfC,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUX,KAAKZ,aACfG,MAAOS,KAAK7B,MAAMY,UAItB,wBAAOoB,UAAWC,IAAIC,MAAtB,mBAEE,uBACEF,UAAWC,IAAIE,MACfC,KAAK,MACLxB,KAAK,SACLyB,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAAUX,KAAKZ,aACfG,MAAOS,KAAK7B,MAAMgB,YAItB,wBAAQoB,KAAK,SAASJ,UAAWC,IAAIQ,OAArC,4BAIF,qBAAKT,UAAWC,IAAIS,gBAApB,SACGlC,EACC,cAAC,IAAD,CACE4B,KAAK,OACLO,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,IACTd,UAAWC,IAAIc,SAGjB,Y,GA9EcC,aA0GpBC,EAAqB,CAAErB,WFhGV,SAAChB,EAAMI,GAAP,8CAAkB,WAAOkC,GAAP,mBAAAC,EAAA,6DAC7BC,EAAU,CAAExC,KAAMA,EAAMI,OAAQA,GAEtCkC,EAAS1D,KAH0B,kBAKVP,IAAMoE,KAAK,YAAaD,GALd,gBAKzBE,EALyB,EAKzBA,KACRJ,EAASzD,EAAqB6D,IANG,kDAQjCJ,EAASxD,EAAqB,EAAD,KARI,0DAAlB,uDEgGsBoC,eF1GlB,yDAAM,WAAOoB,GAAP,iBAAAC,EAAA,6DAC3BD,EAAS9D,KADkB,kBAGFH,IAAMsE,IAAI,aAHR,gBAGjBD,EAHiB,EAGjBA,KACRJ,EAAS5D,EAAsBgE,IAJN,gDAMzBJ,EAAS3D,EAAsB,EAAD,KANL,yDAAN,wDE4GRiE,eATS,SAACxD,GACvB,MAAO,CACLC,SAAUF,EAAiBC,GAC3BQ,QAASD,EAAgBP,MAMWiD,EAAzBO,CAA6CzC,GCzG7C0C,G,MAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUpB,EAAY,EAAZA,MAC3B,OACE,oCACE,6BAAKA,EAAMqB,gBACVD,O,iBCkDDT,EAAqB,CAAEW,cJrBP,SAACC,GAAD,8CAAQ,WAAOX,GAAP,SAAAC,EAAA,6DAC5BD,EAASvD,KADmB,kBAGpBV,IAAM6E,OAAN,oBAA0BD,IAHN,OAI1BX,EAAStD,EAAqBiE,IAJJ,gDAM1BX,EAASrD,EAAqB,EAAD,KANH,yDAAR,wDIuBP2D,eAPS,SAACxD,GAAD,MAAY,CAClCM,MAAOD,EAAcL,GACrBC,SAAUQ,EAA4BT,MAKAiD,EAAzBO,EAhDK,SAAC,GAAwC,IAAtClD,EAAqC,EAArCA,MAAOsD,EAA8B,EAA9BA,cACtBG,EADoD,EAAf9D,SAG3C,OACE,6BACIK,EAkBA,6CAjBAyD,EAAiBC,KAAI,gBAAGpD,EAAH,EAAGA,KAAMI,EAAT,EAASA,OAAQ6C,EAAjB,EAAiBA,GAAjB,OACnB,qBAAa7B,UAAWC,IAAIgC,KAA5B,UACE,oBAAGjC,UAAWC,IAAIiC,KAAlB,UACGtD,EADH,KACWI,KAEX,wBACEgB,UAAWC,IAAIQ,OACfL,KAAK,SACL+B,QAAS,WACPP,EAAcC,IAJlB,sBAJOA,W,iBCgBbZ,EAAqB,CAAEnD,kBAEd0D,gBANS,SAACxD,GAAD,MAAY,CAClCI,OAAQD,EAAeH,MAKeiD,EAAzBO,EA7BA,SAAC,GAAgC,IAA9BpD,EAA6B,EAA7BA,OAAQN,EAAqB,EAArBA,eAKxB,OACE,wBAAOkC,UAAWC,IAAIC,MAAtB,kCAEE,uBACEF,UAAWC,IAAIE,MACfC,KAAK,OACLhB,MAAOhB,EACPoC,SAXW,SAACtB,GAChBpB,EAAeoB,EAAMkD,OAAOhD,gB,oBCWjBiD,GAdH,WACV,OACE,sBAAKrC,UAAWC,KAAIqC,UAApB,UACE,cAAC,EAAD,CAAShC,MAAM,YAAf,SACE,cAAC,EAAD,MAEF,eAAC,EAAD,CAASA,MAAM,WAAf,UACE,cAAC,GAAD,IACA,cAAC,EAAD,W,yBCAF9B,GAAU+D,aAAc,GAAD,mBAC1BnF,GAAwB,kBAAM,KADJ,cAE1BE,GAAwB,kBAAM,KAFJ,cAG1BC,GAAwB,kBAAM,KAHJ,cAI1BC,GAAyB,kBAAM,KAJL,cAK1BC,GAAuB,kBAAM,KALH,cAM1BC,GAAuB,kBAAM,KANH,cAO1BC,GAAyB,kBAAM,KAPL,cAQ1BC,GAAuB,kBAAM,KARH,cAS1BC,GAAuB,kBAAM,KATH,IAYvB2E,GAAc,SAACC,EAAGC,GAAJ,OAAeA,EAAOC,SACpCC,GAAa,kBAAM,MAEnBtE,GAAQiE,YAAc,MAAD,mBACxBnF,EAAwBwF,IADA,cAExBrF,EAAwBiF,IAFA,cAGxBhF,EAAyBoF,IAHD,cAIxBlF,EAAuB8E,IAJC,cAKxB7E,EAAyBiF,IALD,cAMxB/E,EAAuB2E,IANC,IASrBK,GAAeN,YAAc,IAAD,mBAC/BjF,GAAwB,SAACmF,EAAGC,GAAJ,OAAeA,EAAOC,WADf,cAE/BlF,GAAuB,SAACO,EAAD,YAAU2E,SAAV,oBAAqC3E,OAF7B,cAG/BJ,GAAuB,SAACI,EAAD,OAAU2E,EAAV,EAAUA,QAAV,OACtB3E,EAAMI,QAAO,SAACgD,GAAD,OAAaA,EAAQS,KAAOc,QAJX,IAO5BG,GAAgBP,YAAc,GAAD,eAChCzE,GAAiB,SAAC2E,EAAD,YAAME,YAUXI,GAPSC,aAAgB,CACtC9E,MAAO2E,GACPzE,OAAQ0E,GACRtE,WACAF,W,SCvCI2E,GAAcD,aAAgB,CAAE/E,SAAU8E,KAWjCG,GATDC,YAAe,CAC3BC,QAASH,GACTI,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,WCZhEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUf,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJgB,SAASC,eAAe,W","file":"static/js/main.f559ce5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3MwYN\",\"text\":\"ContactList_text__XOGht\",\"button\":\"ContactList_button__sR7YD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__lhNyz\",\"input\":\"Filter_input__Q7aw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3FV8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__qVYFq\",\"input\":\"ContactForm_input__2RoO5\",\"button\":\"ContactForm_button__296W-\",\"spinerContainer\":\"ContactForm_spinerContainer__2mYiz\",\"spiner\":\"ContactForm_spiner__KsMNA\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3001\";\r\n\r\nconst getAllContactsRequest = createAction(\"phonebook/getAllContactsRequest\");\r\nconst getAllContactsSuccess = createAction(\"phonebook/getAllContactsSuccess\");\r\nconst getAllContactsFailure = createAction(\"phonebook/getAllContactsFailure\");\r\n\r\n\r\n\r\nconst addNewContactRequested = createAction(\"phonebook/addNewContactRequested\");\r\nconst addNewContactSuccess = createAction(\"phonebook/addNewContactSuccess\");\r\nconst addNewContactFailure = createAction(\"phonebook/addNewContactFailure\");\r\n\r\n\r\nconst deleteContactRequested  = createAction(\"phonebook/deleteContactRequested\");\r\nconst deleteContactSuccess = createAction(\"phonebook/deleteContactSuccess\");\r\nconst deleteContactFailure  = createAction(\"phonebook/deleteContactFailure \");\r\n\r\nconst onChangeFilter = createAction(\"phonebook/changeFilter\");\r\n\r\n\r\nexport {\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsFailure,\r\n  addNewContactRequested,\r\n  addNewContactSuccess,\r\n  addNewContactFailure,\r\n  deleteContactRequested,\r\n  deleteContactSuccess,\r\n  deleteContactFailure,\r\n  onChangeFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsFailure,\r\n  addNewContactRequested,\r\n  addNewContactSuccess,\r\n  addNewContactFailure,\r\n  deleteContactRequested,\r\n  deleteContactSuccess,\r\n  deleteContactFailure,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3001\";\r\n\r\nconst getAllContacts = () => async (dispatch) => {\r\n  dispatch(getAllContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(getAllContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getAllContactsFailure(error));\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => async (dispatch) => {\r\n  const contact = { name: name, number: number };\r\n\r\n  dispatch(addNewContactRequested());\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    dispatch(addNewContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addNewContactFailure(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequested());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactFailure(error));\r\n  }\r\n};\r\n\r\nexport { addContact, deleteContact, getAllContacts };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getItemsSelector = (state) => state.contacts.items;\r\nconst filterSelector = (state) => state.contacts.filter;\r\nconst errorSelector = (state) => state.contacts.error;\r\nconst loadingSelector = (state) => state.contacts.loading;\r\n\r\nexport const getFilteredContactsSelector = createSelector(\r\n  [getItemsSelector, filterSelector],\r\n  (contacts, filter) =>\r\n    contacts.filter((contatct) =>\r\n      contatct.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n\r\nexport { getItemsSelector, filterSelector, errorSelector, loadingSelector };\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport {\r\n  addContact,\r\n  getAllContacts,\r\n} from \"../../redux/phonebook/phonebook-operation\";\r\nimport {\r\n  getItemsSelector,\r\n  loadingSelector,\r\n} from \"../../redux/phonebook/phonebook-selectors\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  componentDidMount() {\r\n    this.props.getAllContacts();\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { name } = this.state;\r\n\r\n    if (this.props.contacts.some((element) => element.name === name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    this.props.addContact(this.state.name, this.state.number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={css.label}>\r\n            Name\r\n            <input\r\n              className={css.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={this.state.name}\r\n            />\r\n          </label>\r\n\r\n          <label className={css.label}>\r\n            Number\r\n            <input\r\n              className={css.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={this.state.number}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className={css.button}>\r\n            Add Contact\r\n          </button>\r\n        </form>\r\n        <div className={css.spinerContainer}>\r\n          {loading ? (\r\n            <Loader\r\n              type=\"Puff\"\r\n              color=\"#00BFFF\"\r\n              height={50}\r\n              width={50}\r\n              timeout={10000}\r\n              className={css.spiner}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n  getAllContacts: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getItemsSelector(state),\r\n    loading: loadingSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { addContact, getAllContacts };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport css from \"./Sections.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title.toUpperCase()}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/phonebook/phonebook-operation\";\r\nimport {\r\n  errorSelector,\r\n  filterSelector,\r\n  getFilteredContactsSelector,\r\n  getItemsSelector,\r\n} from \"../../redux/phonebook/phonebook-selectors\";\r\n\r\nconst ContactList = ({ error, deleteContact, contacts }) => {\r\n  const filteredContacts = contacts;\r\n\r\n  return (\r\n    <ul>\r\n      {!error ? (\r\n        filteredContacts.map(({ name, number, id }) => (\r\n          <li key={id} className={css.item}>\r\n            <p className={css.text}>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={css.button}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                deleteContact(id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <p>Server error</p>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n  error: PropTypes.oneOfType([PropTypes.object.isRequired]),\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: errorSelector(state),\r\n  contacts: getFilteredContactsSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = { deleteContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { onChangeFilter } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Filter.module.css\";\r\nimport { filterSelector } from \"../../redux/phonebook/phonebook-selectors\";\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => {\r\n  const onChange = (event) => {\r\n    onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <label className={css.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={css.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: filterSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = { onChangeFilter };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport Section from \"../section/Section\";\nimport ContactList from \"../contactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport css from \"./App.module.css\";\n\nconst App = () => {\n  return (\n    <div className={css.container}>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsFailure,\r\n  addNewContactRequested,\r\n  addNewContactSuccess,\r\n  addNewContactFailure,\r\n  deleteContactRequested,\r\n  deleteContactSuccess,\r\n  deleteContactFailure,\r\n  onChangeFilter,\r\n} from \"./phonebook-actions\";\r\n\r\nconst loading = createReducer(false, {\r\n  [getAllContactsRequest]: () => true,\r\n  [getAllContactsSuccess]: () => false,\r\n  [getAllContactsFailure]: () => false,\r\n  [addNewContactRequested]: () => true,\r\n  [addNewContactSuccess]: () => false,\r\n  [addNewContactFailure]: () => false,\r\n  [deleteContactRequested]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactFailure]: () => false,\r\n});\r\n\r\nconst handleError = (_, action) => action.payload;\r\nconst clearError = () => null;\r\n\r\nconst error = createReducer(null, {\r\n  [getAllContactsRequest]: clearError,\r\n  [getAllContactsFailure]: handleError,\r\n  [addNewContactRequested]: clearError,\r\n  [addNewContactFailure]: handleError,\r\n  [deleteContactRequested]: clearError,\r\n  [deleteContactFailure]: handleError,\r\n});\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [getAllContactsSuccess]: (_, action) => action.payload,\r\n  [addNewContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [onChangeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n  error,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./phonebook/phonebook-reducers\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst rootReducer = combineReducers({ contacts: contactsReducer });\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport \"modern-normalize/modern-normalize.css\";\n/////////////////////////////////////////////////\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}